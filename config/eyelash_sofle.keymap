#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    macros {
        ctrl_space_del: ctrl_space_del {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings =
            <&macro_press &kp LCTRL>,
            <&macro_press &kp SPACE>,
            <&macro_tap &kp DELETE>,
            <&macro_release &kp SPACE>,
            <&macro_release &kp LCTRL>;
        };
        five_rights: five_rights {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;      // Delay between key presses in ms
            tap-ms = <30>;       // How long each key is held down in ms
            bindings = <&kp RIGHT_ARROW &kp RIGHT_ARROW &kp RIGHT_ARROW &kp RIGHT_ARROW &kp RIGHT_ARROW>;
        };

        five_downs: five_downs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW>;
        };

        five_ups: five_ups {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
        };

        five_lefts: five_lefts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
        };

        ctrl_five_rights: ctrl_five_rights {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_tap &kp RIGHT_ARROW>,
                <&macro_tap &kp RIGHT_ARROW>,
                <&macro_tap &kp RIGHT_ARROW>,
                <&macro_tap &kp RIGHT_ARROW>,
                <&macro_tap &kp RIGHT_ARROW>,
                <&macro_release &kp LCTRL>;
        };

        ctrl_five_lefts: ctrl_five_lefts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_tap &kp LEFT_ARROW>,
                <&macro_tap &kp LEFT_ARROW>,
                <&macro_tap &kp LEFT_ARROW>,
                <&macro_tap &kp LEFT_ARROW>,
                <&macro_tap &kp LEFT_ARROW>,
                <&macro_release &kp LCTRL>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp LEFT_BRACKET
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_PLAY_PAUSE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp LG( LA( LEFT_SHIFT ) )  &kp PRINTSCREEN  &mo 2      &kp K_CONTEXT_MENU  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F11   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp F12
&trans      &trans        &trans       &trans        &trans        &trans           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME          &kp UP      &kp END   &kp MINUS         &kp EQUAL
&trans      &trans        &trans          &trans           &trans           &trans           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp RIGHT_BRACKET  &kp BSLH
&trans      &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &kp TILDE  &kp GRAVE  &trans  &trans    &kp NON_US_BACKSLASH           &kp KP_DIVIDE
&kp C_MUTE  &trans           &trans          &kp LEFT_ALT     &trans           &trans             &mkp LCLK        &trans  &trans &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp LA(F4)  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans      &trans     &trans      &trans
&trans      &kp LA(LS(Z))    &kp LA(LS(A))  &kp LA(LS(S))        &kp LA(LS(W))        &kp LA(LS(Q))          &mmv MOVE_DOWN   &trans  &trans  &trans      &trans    &trans    &trans
&trans     &kp LG(LS(E))  &five_ups    &trans        &kp LC(LS(V))        &ctrl_space_del          &kp C_PREVIOUS   &trans  &trans  &trans      &trans     &trans     &bt BT_CLR
&trans     &five_lefts    &five_downs          &five_rights   &kp LC(LA(V))        &kp LC(LA(B))          &kp C_NEXT  &trans  &trans  &trans  &trans  &soft_off  &bootloader
&trans     &trans        &trans          &trans        &trans        &bt BT_CLR_ALL          &mkp LCLK        &out OUT_BLE  &trans  &studio_unlock      &out OUT_USB     &sys_reset
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};